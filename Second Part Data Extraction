# -*- coding: utf-8 -*-
"""
Created on Thu Jul 18 16:07:47 2019

@author: fro
"""

import glob, os
import matplotlib as mpl
import matplotlib.pyplot as plt
import datetime
#from mpl_toolkits.basemap import Basemap
import numpy as np
from pyhdf.SD import SD, SDC
long = 15 
lat = 38
for a in range(0,20):
    file_year = str(a).zfill(2)
    for i in range(1,367):
        file_num = str(i).zfill(3)
        os.chdir("D:\dataS")
        files = []
        file_name = 'MOD14.A20' + file_year + file_num + '*'
        for file in glob.glob(file_name):
            files.append(file)
        if len(files) > 1:
            for individualfile in files:
                print('File processing', individualfile)
                indivfile = SD(individualfile, SDC.READ)
                datasets_dic = indivfile.datasets()
                try:
                    FP_latitude = indivfile.select('FP_latitude').get()
                    FP_longitude = indivfile.select('FP_longitude').get()
                    FP_T21 = indivfile.select('FP_T21').get()
                except ValueError:
                    continue
                latitude = np.where(FP_latitude % lat < 1 )
                longitude = np.where(FP_longitude % long < 1 )
                if len(latitude[0]):
                        for lati in latitude:
                            brightness = FP_T21[lati]
                        date_to_store =  str(datetime.date.fromordinal(i)).replace('0001','20%s' %file_year)
                        date_to_store = date_to_store.split('-')
                        to_store=''
                        f = open("demofile2.txt", "a+")
                        for date in date_to_store:
                            to_store += str(date) +','
                        for z in range(len(brightness)):
                            f.write(to_store + str(brightness[z]) + "\n")
                        f.close() 
                        print('file entry %s' %individualfile)
                else:
                    print('file empty %s' %individualfile)
                                          
for idx,sds in enumerate(datasets_dic.keys()):
    print (idx,sds)
 
